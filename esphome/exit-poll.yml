esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  project:
    name: "pdxhackerspace.exit_poll"
    version: "0.3.0"
  on_boot:
    priority: 500
    then:
      - light.turn_off: led_strip
  on_shutdown:
    priority: 500
    then:
      - light.turn_off: led_strip

esp32:
  board: um_tinys3
  framework:
    type: arduino

packages:
  wifi-diagnostics: github://romkey/esphome-lib/lib/wifi-diagnostics.yml@main
  esp32-diagnostics: github://romkey/esphome-lib/lib/esp32.yml@main

logger:

api:
  encryption:

ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  id: wifi_id

  ap:
    ssid: "${name} Fallback Hotspot"

captive_portal:

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: America/Los_Angeles

debug:
  update_interval: 5s

font:
  - file: 'fonts/B612-Regular.ttf'
    id: font_12pt
    size: 12
  - file: 'fonts/B612-Regular.ttf'
    id: font_20pt
    size: 20
  - file: 'fonts/B612-Regular.ttf'
    id: font_40pt
    size: 40
# https://community.home-assistant.io/t/az-touch-esp-example/383573/22
  - file: 'fonts/MaterialIcons-Regular.ttf'
    id: font_icons
    size: 22
    glyphs:
      - "\U0000E63E" # wifi
      - "\U0000E648" # no-wifi

  - file: 'fonts/MaterialIcons-Regular.ttf'
    id: font_icons_40pt
    size: 40
    glyphs:
      - "\U0000E63E" # wifi
      - "\U0000E648" # no-wifi

color:
  - id: my_red
    red: 100%
    green: 0%
    blue: 0%
  - id: my_green
    red: 0%
    green: 100%
    blue: 0%
  - id: my_blue
    red: 0%
    green: 0%
    blue: 100%
  - id: my_yellow
    red: 100%
    green: 100%
    blue: 0%
  - id: my_black
    red: 0%
    green: 0%
    blue: 0%
  - id: my_white
    red: 100%
    green: 100%
    blue: 100%

image:
  - file: "files/lcars-blue.png"
    id: lcars_blue
    type: RGB565
  - file: "files/lcars-red.png"
    id: lcars_red
    type: RGB565
  - file: "files/lcars-green-bar.png"
    id: lcars_green_bar
    type: RGB565
  - file: "files/lcars-red-bar.png"
    id: lcars_red_bar
    type: RGB565
  - file: "files/lcars-gray-bar.png"
    id: lcars_gray_bar
    type: RGB565
  - file: "files/lcars-blue-arc.png"
    id: lcars_blue_arc
    type: RGB565
  - file: "files/lcars-red-arc.png"
    id: lcars_red_arc
    type: RGB565
  - file: "files/lcars-top-arc.png"
    id: lcars_top_arc
    type: RGB565

i2c:
  sda: ${i2c_sda_pin}
  scl: ${i2c_scl_pin}
  scan: True
  frequency: 100kHz

spi:
  clk_pin: ${spi_clk_pin}
  mosi_pin: ${spi_mosi_pin}
  miso_pin: ${spi_miso_pin}
  interface: hardware

display:
  # https://esphome.io/components/display/ili9xxx
  - platform: ili9xxx
    model: ${display_model}
    dc_pin: ${display_dc_pin}
    reset_pin: ${display_rst_pin}
    cs_pin: ${display_cs_pin}
    data_rate: 40MHz
    rotation: 0
    invert_colors: false

sensor:
  - platform: homeassistant
    name: "Section 1 Doors Open"
    id: section_1_doors_open
    entity_id: sensor.total_section_1_doors_open
  - platform: homeassistant
    name: "Section 1 AV On"
    id: section_1_av_on
    entity_id: sensor.total_section_1_av_on
  - platform: homeassistant
    name: "Section 1 Running Water"
    id: section_1_water_running
    entity_id: sensor.total_section_1_water_running
  - platform: homeassistant
    name: "Section 1 Doors Unlocked"
    id: section_1_doors_unlocked
    entity_id: sensor.total_section_1_doors_unlocked
  - platform: homeassistant
    name: "Section 2 Doors Open"
    id: section_2_doors_open
    entity_id: sensor.total_section_2_doors_open
  - platform: homeassistant
    name: "Section 2 AV On"
    id: section_2_av_on
    entity_id: sensor.total_section_2_av_on
  - platform: homeassistant
    name: "Section 2 Running Water"
    id: section_2_water_running
    entity_id: sensor.total_section_2_water_running
  - platform: homeassistant
    name: "Section 2 Doors Unlocked"
    id: section_2_doors_unlocked
    entity_id: sensor.total_section_2_doors_unlocked
  - platform: homeassistant
    name: "Section 3 Doors Open"
    id: section_3_doors_open
    entity_id: sensor.total_section_3_doors_open
  - platform: homeassistant
    name: "Section 3 AV On"
    id: section_3_av_on
    entity_id: sensor.total_section_3_av_on
  - platform: homeassistant
    name: "Section 3 Running Water"
    id: section_3_water_running
    entity_id: sensor.total_section_3_water_running
  - platform: homeassistant
    name: "Section 3 Doors Unlocked"
    id: section_3_doors_unlocked
    entity_id: sensor.total_section_3_doors_unlocked
  - platform: homeassistant
    name: "Section 4 Doors Open"
    id: section_4_doors_open
    entity_id: sensor.total_section_4_doors_open
  - platform: homeassistant
    name: "Section 4 AV On"
    id: section_4_av_on
    entity_id: sensor.total_section_4_av_on
  - platform: homeassistant
    name: "Section 4 Running Water"
    id: section_4_water_running
    entity_id: sensor.total_section_4_water_running
  - platform: homeassistant
    name: "Section 4 Doors Unlocked"
    id: section_4_doors_unlocked
    entity_id: sensor.total_section_4_doors_unlocked

  - platform: template
    name: "Total doors unlocked"
    id: total_doors_unlocked
    internal: True
    lambda: |-
      return id(section_1_doors_unlocked).state + id(section_2_doors_unlocked).state + id(section_3_doors_unlocked).state + id(section_4_doors_unlocked).state;
    update_interval: 1s
  - platform: template
    name: "Total doors open"
    id: total_doors_open
    internal: True
    lambda: |-
      return id(section_1_doors_open).state + id(section_2_doors_open).state + id(section_3_doors_open).state + id(section_4_doors_open).state;
    update_interval: 1s
  - platform: template
    name: "Total AV on"
    id: total_av_on
    internal: True
    lambda: |-
      return id(section_1_av_on).state + id(section_2_av_on).state + id(section_3_av_on).state + id(section_4_av_on).state;
    update_interval: 1s    
  - platform: template
    name: "Total water running"
    id: total_water_running
    internal: True
    lambda: |-
      return id(section_1_water_running).state + id(section_2_water_running).state + id(section_3_water_running).state + id(section_4_water_running).state;
    update_interval: 1s

  - platform: template
    name: "System Status"
    id: system_status
    lambda: |-
      if(!id(wifi_id).is_connected()){
        return 1;
      }
      if(!global_api_server->is_connected()) {
        return 2;
      }   
      if(id(total_doors_open).state > 0 || id(total_doors_unlocked).state > 0) {
        return 4;
      }
      if(id(total_av_on).state > 0 || id(total_water_running).state > 0) {
        return 3;
      }

      return 0;
    update_interval: 1s


button:
  - platform: restart
    name: "Restart"
  - platform: template
    name: "Turn on lights"
    on_press:
      light.turn_on:
        id: led_strip
        effect: "slow pulse"
        red: 0%
        green: 100%
        blue: 0%
  - platform: template
    name: "Red"
    on_press:
      light.turn_on:
        id: led_strip
        red: 100%
        green: 0%
        blue: 0%
  - platform: template
    name: "Green"
    on_press:
      light.turn_on:
        id: led_strip
        red: 0%
        green: 100%
        blue: 0%
  - platform: template
    name: "Blue"
    on_press:
      light.turn_on:
        id: led_strip
        red: 0%
        green: 0%
        blue: 100%
  - platform: template
    name: "Rainbow"
    on_press:
      light.turn_on:
        id: led_strip
        effect: addressable_rainbow
  - platform: template
    name: "Scan"
    on_press:
      light.turn_on:
        id: led_strip
        effect: addressable_scan
        red: 100%
        green: 0%
        blue: 0%
  - platform: template
    name: "Throb"
    on_press:
      light.turn_on:
        id: led_strip
        effect: throb

# https://esphome.io/components/light/
light:
  - platform: neopixelbus
    variant: ${led_chip}
    pin: ${led_data_pin}
    num_leds: ${led_number}
    type: ${led_order}
    id: "led_strip"
    effects:
      - pulse:
          name: "Slow Pulse"
          # transition_length: 1s      # defaults to 1s
          update_interval: 2s      
# system status
# 0 - all good (green - 0x00FF00)
# 1 - no wifi (orange - 0xFFA500)
# 2 - no Home Assistant data (blue - 0x0000FF)
# 3 - non-urgent issues (yellow - 0xFFFF00)
# 4 - urgent issues (red - 0xFF0000)
      - addressable_lambda:
          name: "static"
          update_interval: 1s
          lambda: |-
            Color color;

            switch((int)id(system_status).state) {
              case 0:
                color = Color(0x00, 0xFF, 0x00);
                color = Color(0xFF, 0xFF, 0x00);
                break;
              case 1:
                color = Color(0xFF, 0xAA, 0x00);
                break;
              case 2:
                color = Color(0x00, 0x00, 0xFF);
                break;
              case 3:
                color = Color(0xFF, 0xFF, 0x00);
                break;
              case 4:
                color = Color(0xFF, 0x00, 0x00);
                break;
              default:
                color = Color::BLACK;
            }
            it.range(0, 8) = color;
      - addressable_scan:
      - addressable_lambda:
          name: "throb"
          update_interval: 100ms
          lambda: |-
            static int brightness = 0;
            static int increment = 0x10;

            if(brightness == 100)
              increment = -0x10;
            if(brightness == 0)
              increment = 0x10;

            brightness += increment;
            brightness = min(brightness, 100);
            brightness = max(brightness, 0);

            // auto leds = it.leds();

            for(int i = it.size() - 1; i > 0; i--) {
              // it[i].fadeLightBy( brightness );
              // it[i].set_brightness(brightness);
            }

interval:
  - interval: 1sec
    then:
      - light.control:
          id: led_strip
          effect: static
          state: on
          brightness: 50%

